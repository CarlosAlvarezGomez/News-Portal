{"ast":null,"code":"var _jsxFileName = \"/Users/Carlos/Desktop/Desktop Documents/Projects/website/src/Components/ArticleList/ArticleList.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport './ArticleList.css';\nimport { Article } from '../Article/Article';\nimport { useGetArticles } from './useGetArticles';\nexport function ArticleList(category) {\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    loading,\n    error,\n    articles,\n    hasMore\n  } = useGetArticles(category, pageNumber);\n  const observer = useRef();\n  const lastArticleElementRef = useCallback(node => {\n    if (loading) {\n      return;\n    }\n\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n\n    observer.current = new IntersectionObserver();\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, articles.map((art, index) => {\n    if (articles.length === index + 1) {\n      return Article(art, lastArticleElementRef);\n    } else {\n      return Article(art);\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, articles.map((art, index) => {\n    return Article(art);\n  }))));\n}","map":{"version":3,"sources":["/Users/Carlos/Desktop/Desktop Documents/Projects/website/src/Components/ArticleList/ArticleList.js"],"names":["React","useState","useRef","useCallback","Article","useGetArticles","ArticleList","category","pageNumber","setPageNumber","loading","error","articles","hasMore","observer","lastArticleElementRef","node","current","disconnect","IntersectionObserver","map","art","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAEpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM;AAACS,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAsCR,cAAc,CAACE,QAAD,EAAWC,UAAX,CAA1D;AAEA,QAAMM,QAAQ,GAAGZ,MAAM,EAAvB;AACA,QAAMa,qBAAqB,GAAGZ,WAAW,CAACa,IAAI,IAC5C;AACE,QAAIN,OAAJ,EAAa;AACX;AACD;;AACD,QAAII,QAAQ,CAACG,OAAb,EAAsB;AACpBH,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACD;;AACDJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,EAAnB;AACD,GATsC,CAAzC;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,CAACQ,GAAT,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,QAAIV,QAAQ,CAACW,MAAT,KAAoBD,KAAK,GAAG,CAAhC,EAAkC;AAChC,aAAOlB,OAAO,CAACiB,GAAD,EAAMN,qBAAN,CAAd;AACD,KAFD,MAGK;AACH,aAAOX,OAAO,CAACiB,GAAD,CAAd;AACD;AACA,GAPF,CADH,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAACQ,GAAT,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,WAAOlB,OAAO,CAACiB,GAAD,CAAd;AAAoB,GADrB,CADH,CAZF,CADF,CADJ;AAqBC","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport './ArticleList.css';\nimport { Article } from '../Article/Article';\nimport { useGetArticles } from './useGetArticles';\n\nexport function ArticleList(category) {\n\n  const [pageNumber, setPageNumber] = useState(1)\n\n  const {loading, error, articles, hasMore} = useGetArticles(category, pageNumber)\n\n  const observer = useRef()\n  const lastArticleElementRef = useCallback(node =>\n    {\n      if (loading) {\n        return\n      }\n      if (observer.current) {\n        observer.current.disconnect()\n      }\n      observer.current = new IntersectionObserver()\n    })\n\n  return (\n      <ul>\n        <div className=\"row\">\n          <div className=\"column\">\n            {articles.map( (art, index) => {\n              if (articles.length === index + 1){\n                return Article(art, lastArticleElementRef);\n              } \n              else {\n                return Article(art);\n              }\n              })}\n\n          </div>\n          <div className=\"column\">\n            {articles.map( (art, index) => {\n              return Article(art)})}\n          </div>\n        </div>\n      </ul>\n    )\n  }"]},"metadata":{},"sourceType":"module"}